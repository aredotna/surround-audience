{
  "name": "backbone-cache-sync",
  "version": "0.0.3",
  "description": "A server-side adapter that caches Backbone.fetch requests using Redis.",
  "keywords": [
    "backbone",
    "cache"
  ],
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "contributors": [
    {
      "name": "Brennan Moore",
      "email": "brennanmoore@gmail.com",
      "url": "http://brennanmoore.com"
    }
  ],
  "engines": {
    "node": ">= 0.10.x"
  },
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "redis": "*",
    "backbone": "*",
    "underscore": "*",
    "backbone-super-sync": "0.0.5",
    "q": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "sinon": "*",
    "should": "*",
    "rewire": "*"
  },
  "readme": "# Backbone Cache Sync\n\nAn implementation of Backbone.sync that takes the `cache: true`\noption. This will store the response in Redis keyed by the url. The\nnext request to that url with `cache: true` will fetch the cached data\nfrom [Redis](https://github.com/mranney/node_redis) instead of making\na GET request. Requires\n[backbone-super-sync](https://github.com/artsy/backbone-super-sync).\n\n## Example\n\n````javascript\nREDIS_URL = \"redis://redistogo:t0k3n@crestfish.redistogo.com:1337/\";\nDEFAULT_CACHE_TIME = 3600;\nNODE_ENV = \"production\";\nvar Backbone = require('backbone');\nBackbone.sync = require('backbone-super-sync');\ncacheSync = require('backbone-cache-sync');\ncacheSync(Backbone.sync, REDIS_URL, DEFAULT_CACHE_TIME, NODE_ENV);\n\nmodel = new Backbone.Model({id: 'bar'});\nmodel.urlRoot = '/foo';\nmodel.fetch({cache: true});\n````\n\n## Contributing\n\nPlease fork the project and submit a pull request with tests. Install node modules `npm install` and run tests with `make test`\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "backbone-cache-sync@0.0.3",
  "_from": "backbone-cache-sync@*"
}
